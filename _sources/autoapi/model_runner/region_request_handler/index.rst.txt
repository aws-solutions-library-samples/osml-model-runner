model_runner.region_request_handler
===================================

.. py:module:: model_runner.region_request_handler


Attributes
----------

.. autoapisummary::

   model_runner.region_request_handler.logger


Classes
-------

.. autoapisummary::

   model_runner.region_request_handler.RegionRequestHandler


Module Contents
---------------

.. py:data:: logger

.. py:class:: RegionRequestHandler(region_request_table: model_runner.database.RegionRequestTable, job_table: model_runner.database.JobTable, region_status_monitor: model_runner.status.RegionStatusMonitor, endpoint_statistics_table: model_runner.database.EndpointStatisticsTable, tiling_strategy: model_runner.tile_worker.TilingStrategy, endpoint_utils: model_runner.common.EndpointUtils, config: model_runner.app_config.ServiceConfig)

   Class responsible for handling RegionRequest processing.


   .. py:attribute:: region_request_table


   .. py:attribute:: job_table


   .. py:attribute:: region_status_monitor


   .. py:attribute:: endpoint_statistics_table


   .. py:attribute:: tiling_strategy


   .. py:attribute:: endpoint_utils


   .. py:attribute:: config


   .. py:method:: process_region_request(region_request: model_runner.api.RegionRequest, region_request_item: model_runner.database.RegionRequestItem, raster_dataset: osgeo.gdal.Dataset, sensor_model: Optional[aws.osml.photogrammetry.SensorModel] = None, metrics: aws_embedded_metrics.logger.metrics_logger.MetricsLogger = None) -> model_runner.database.JobItem

      Processes RegionRequest objects that are delegated for processing. Loads the specified region of an image into
      memory to be processed by tile-workers. If a raster_dataset is not provided directly it will poll the image
      from the region request.

      :param region_request: RegionRequest = the region request
      :param region_request_item: RegionRequestItem = the region request to update
      :param raster_dataset: gdal.Dataset = the raster dataset containing the region
      :param sensor_model: Optional[SensorModel] = the sensor model for this raster dataset
      :param metrics: MetricsLogger = the metrics logger to use to report metrics.

      :return: JobItem



   .. py:method:: fail_region_request(region_request_item: model_runner.database.RegionRequestItem, metrics: aws_embedded_metrics.logger.metrics_logger.MetricsLogger = None) -> model_runner.database.JobItem

      Fails a region if it failed to process successfully and updates the table accordingly before
      raising an exception

      :param region_request_item: RegionRequestItem = the region request to update
      :param metrics: MetricsLogger = the metrics logger to use to report metrics.

      :return: None



